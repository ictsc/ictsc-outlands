name: Backend CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:

defaults:
  run:
    working-directory: backend

jobs:
  connect:
    name: Connect Generation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: proto
    steps:
      - name: Generate a token
        id: token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.PUSHER_APP_ID }}
          private-key: ${{ secrets.PUSHER_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.token.outputs.token }}
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: backend/go.mod
          cache-dependency-path: backend/go.sum
      - name: Install buf
        uses: bufbuild/buf-setup-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install Connect Related Packages
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.32.0
          go install connectrpc.com/connect/cmd/protoc-gen-connect-go@v1.14.0
      - name: Generate Connect Files
        run: buf generate
      - name: Push
        id: push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "generate connect files"
          branch: ${{ github.head_ref }}
          commit_author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
      - name: Exit with Error If Files Are Changed
        if: steps.push.outputs.changes_detected == 'true'
        run: exit 1
  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: connect
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run golangci-lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          go_version_file: backend/go.mod
          workdir: backend
          fail_on_error: true
          filter_mode: nofilter
          golangci_lint_flags: --timeout=10m
  format:
    name: Format
    runs-on: ubuntu-latest
    needs: connect
    steps:
      - name: Generate a token
        id: token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.PUSHER_APP_ID }}
          private-key: ${{ secrets.PUSHER_PRIVATE_KEY }}
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ steps.token.outputs.token }}
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: backend/go.mod
          cache-dependency-path: backend/go.sum
      - name: Mod Tidy
        run: go mod tidy
      - name: Install Format Tools
        run: |
          go install golang.org/x/tools/cmd/goimports@v0.17.0
          go install mvdan.cc/gofumpt@v0.5.0
      - name: Run Format Tools
        run: |
          goimports -l -w $(find . -type f -name '*.go' -not -path "*/internal/proto/*")
          gofumpt -l -w .
      - name: Push
        id: push
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "run go mod tidy & format go codes"
          branch: ${{ github.head_ref }}
          commit_author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
      - name: Exit with Error If Files Are Changed
        if: steps.push.outputs.changes_detected == 'true'
        run: exit 1
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: connect
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: backend/go.mod
          cache-dependency-path: backend/go.sum
      - name: Mod Download
        run: go mod download
      - name: Build
        run: go build
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: backend/go.mod
          cache-dependency-path: backend/go.sum
      - name: Run Test
        run: go test ./... -v
